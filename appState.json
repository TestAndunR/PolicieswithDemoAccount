{"EDITOR_STATE":{"allProjectFiles":{"c2825f38-53bd-4385-80fb-aabc8db9e75f":{"id":"c2825f38-53bd-4385-80fb-aabc8db9e75f","parent":null,"name":"PolicieswithDemoAccount","type":"DIRECTORY","isDirectory":true,"children":["56b0252d-1a07-4981-b11e-b3d81c35516e"],"isRemovable":false,"filePath":"PolicieswithDemoAccount"},"56b0252d-1a07-4981-b11e-b3d81c35516e":{"id":"56b0252d-1a07-4981-b11e-b3d81c35516e","parent":"c2825f38-53bd-4385-80fb-aabc8db9e75f","name":"lambda.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"PolicieswithDemoAccount/lambda.js","code":"let AWS = require('aws-sdk');\nconst cognito_idp = new AWS.CognitoIdentityServiceProvider();\nconst kinesis = new AWS.Kinesis();\nlet SL_AWS = require('slappforge-sdk-aws');\nconst sqs = new SL_AWS.SQS(AWS);\nlet connectionManager = require('./ConnectionManager');\nconst sns = new AWS.SNS();\nconst s3 = new AWS.S3();\nconst ddb = new AWS.DynamoDB.DocumentClient();\n\n\nexports.handler = function (event, context, callback) {\n    let name = event.name\n\n    ddb.put({\n        TableName: 'demoDDB',\n        Item: { 'demoUser': name }\n    }, function (err, data) {\n        if (err) {\n            //handle error\n        } else {\n            //your logic goes here\n        }\n    });\n    s3.listObjects({\n        'Bucket': 'demouser.bucket',\n        'MaxKeys': 10,\n        'Prefix': ''\n    }).promise()\n        .then(data => {\n            console.log(data);           // successful response\n        })\n        .catch(err => {\n            console.log(err, err.stack); // an error occurred\n        });\n    sns.publish({\n        Message: 'DemoUser',\n        MessageAttributes: {\n            'AWS.SNS.SMS.SMSType': {\n                DataType: 'String',\n                StringValue: 'Promotional'\n            },\n            'AWS.SNS.SMS.SenderID': {\n                DataType: 'String',\n                StringValue: 'Andun'\n            },\n        },\n        PhoneNumber: '+94770630943'\n    }).promise()\n        .then(data => {\n            console.log(\"Success\");\n        })\n        .catch(err => {\n            console.log(err);\n        });\n\n    kinesis.describeStream({\n        StreamName: 'demo-user-stream'\n    }).promise()\n        .then(data => {\n            // your logic goes here\n            console.log(data)\n        })\n        .catch(err => {\n            // error handling goes here\n            console.log(err)\n        });\n    sqs.sendMessage({\n        MessageBody: 'Hello DemoUser',\n        QueueUrl: 'https://sqs.us-east-1.amazonaws.com/318300609668/demoUser',\n        DelaySeconds: '0',\n        MessageAttributes: {}\n    }, function (data) {\n        // your logic (logging etc) to handle successful message delivery, should be here\n        console.log(data);\n    }, function (error) {\n        // your logic (logging etc) to handle failures, should be here\n        console.log(error);\n    });\n    sqs.receiveMessage({\n        QueueUrl: 'https://sqs.us-east-1.amazonaws.com/318300609668/demoUser',\n        AttributeNames: ['All'],\n        MaxNumberOfMessages: '1',\n        VisibilityTimeout: '30',\n        WaitTimeSeconds: '0'\n    }).promise()\n        .then(receivedMsgData => {\n            if (!!(receivedMsgData) && !!(receivedMsgData.Messages)) {\n                let receivedMessages = receivedMsgData.Messages;\n                receivedMessages.forEach(message => {\n                    // your logic to access each message through out the loop. Each message is available under variable message \n                    console.log(message)\n                    // within this block\n                });\n            } else {\n                // No messages to process\n                console.log(\"No messages\")\n            }\n        })\n        .catch(err => {\n            // error handling goes here\n            console.log(err)\n        });\n\n    cognito_idp.adminCreateUser({\n        UserPoolId: process.env.UserPoolId_cognitodemoUsers, /* required */\n        Username: \"demouser1\", /* required */\n        DesiredDeliveryMediums: [\"SMS\", \"EMAIL\"],//[SMS | EMAIL,/* more items */],\n        ForceAliasCreation: false,\n        MessageAction: \"RESEND\",\n        TemporaryPassword: \"Adrt#2018\",\n        UserAttributes: [],\n        ValidationData: []\n    }, function (error, data) {\n        if (error) {\n            // implement error handling logic here\n            throw error;\n            console.log(error)\n        }\n        // your logic goes within this block\n    });\n\n\n\n    callback(null, 'Successfully executed');\n}","triggers":[{"resourceName":"apigusEast1demoAPItestany","config":{}}],"config":{"memory":128,"timeout":60,"runtime":"nodejs8.10"},"customSecurityPolicy":{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Resource":["*"],"Action":["execute-api:*","cloudformation:*","cloudtrail:*","cloudwatch:*","events:*","dynamodb:*","kinesis:*","lambda:*","rds:*","s3:*","sns:*","sqs:*","iam:*","codebuild:*","logs:*","apigateway:*","health:*","ec2:DescribeVpcs","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ecr:DescribeRepositories","ecr:ListImages","sts:AssumeRole","ssm:PutParameter","kms:*"]}]},"testCases":{"9305d99b-05cf-4349-86b1-3624649280b9":{"id":"9305d99b-05cf-4349-86b1-3624649280b9","name":"Unnamed event","functionId":"56b0252d-1a07-4981-b11e-b3d81c35516e","event":"{\n    \"name\":\"Andun\"\n}"}}}},"rootNode":"c2825f38-53bd-4385-80fb-aabc8db9e75f","openFiles":["56b0252d-1a07-4981-b11e-b3d81c35516e"],"currentFileId":"56b0252d-1a07-4981-b11e-b3d81c35516e","resources":{"apigusEast1demoAPItestany":{"name":"apigusEast1demoAPItestany","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":0,"apiName":"demoAPI","endpointType":"EDGE","resourceMode":0,"resourceName":"test","resourcePath":"/test","restMethod":"ANY","proxyIntegration":false,"enableCORS":false,"stageMode":0,"stageName":"Prod"},"globallyEditable":true},"ddbdemoDDB":{"name":"ddbdemoDDB","type":"DynamoDB","config":{"mode":0,"operation":"put","table":{"arn":"","name":"demoDDB","partitionKey":"ID","partitionKeyType":"S","hasSortKey":false,"sortKey":"","sortKeyType":"S","mode":0},"parameters":{"Key":{},"Item":{"demoUser":"@{name}"},"ExpressionAttributeValues":{}},"validator":{"validatableFields":{},"validity":true},"valid":true},"globallyEditable":false},"s3demouserbucket":{"name":"s3demouserbucket","type":"S3","config":{"mode":0,"bucket":{"region":"us-east-1","name":"demouser.bucket"}},"globallyEditable":false},"snsDirectSMSResource":{"name":"snsDirectSMSResource","type":"SNS","config":{"snsType":1,"numbers":["+94770630943"]},"globallyEditable":false},"kinesisdemoUserStream":{"name":"kinesisdemoUserStream","type":"Kinesis","config":{"mode":0,"StreamName":"demo-user-stream","shards":1,"region":"us-east-1","operation":"describe-stream"},"globallyEditable":true},"sqsusEast1demoUser":{"name":"sqsusEast1demoUser","type":"SQS","config":{"mode":0,"existing":false,"name":"demoUser","url":"https://sqs.us-east-1.amazonaws.com/318300609668/demoUser","selectedRegion":"us-east-1","deliveryDelay":0,"deliveryDelayUnit":"seconds","useRedrivePolicy":false,"useSSE":false,"kmsCustomerMasterKey":"default","accountId":"318300609668","dataKeyReusePeriod":5,"queueType":"standardQueue","defaultVisibilityTimeout":30,"defaultVisibilityTimeoutUnit":"seconds","messageRetentionPeriod":4,"messageRetentionPeriodUnit":"days","maximumMessageSize":256,"receiveMessageWaitTime":0,"deadLetterQueueName":"","contentBasedDeduplication":false,"operation":1,"createdByApp":true},"globallyEditable":true,"existing":false},"cognitodemoUsers":{"name":"cognitodemoUsers","type":"CognitoIdentityServiceProvider","config":{"mode":0,"operation":"adminCreateUser","name":"demoUsers","userPool":{"Name":"demo-users","Policies":{"PasswordPolicy":{"MinimumLength":8,"RequireUppercase":true,"RequireLowercase":true,"RequireNumbers":true,"RequireSymbols":true}},"SchemaAttributes":[{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":false,"Name":"sub","Required":true},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"address","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"birthdate","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"email","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"family_name","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"gender","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"given_name","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"locale","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"middle_name","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"name","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"nickname","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"phone_number","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"picture","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"preferred_username","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"profile","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"timezone","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"updated_at","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"website","Required":false}]},"policies":{"MinimumLength":8,"RequireUppercase":true,"RequireLowercase":true,"RequireNumbers":true,"RequireSymbols":true},"SchemaAttributes":[{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":false,"Name":"sub","Required":true},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"address","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"birthdate","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"email","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"family_name","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"gender","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"given_name","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"locale","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"middle_name","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"name","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"nickname","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"phone_number","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"picture","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"preferred_username","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"profile","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"timezone","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"updated_at","Required":false},{"AttributeDataType":"String","DeveloperOnlyAttribute":false,"Mutable":true,"Name":"website","Required":false}]},"globallyEditable":true}},"envVariables":[{"lambdaId":"all","varKey":"SIGMA_AWS_ACC_ID","varValue":null,"shouldPersist":false,"editable":false}],"packageJSON":{"dependencies":{"aws-sdk":{"name":"aws-sdk","version":"2.176.0","notRemovable":true},"slappforge-sdk-aws":{"name":"slappforge-sdk-aws","version":"0.0.5","notRemovable":false}}},"lambdaId":"56b0252d-1a07-4981-b11e-b3d81c35516e","additionalFiles":[]},"PROJECT_META":{"projectName":"PolicieswithDemoAccount","projectDescription":"","projectVersion":"1.0.0","projectRegion":"us-east-1","repoName":"test","repoUrl":"","lastSave":1529907901865},"VCS_STATE":{"provider":"GITHUB","repo":{"name":"PolicieswithDemoAccount","url":"https://github.com/TestAndunR/PolicieswithDemoAccount"}}}