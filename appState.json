{"EDITOR_STATE":{"allProjectFiles":{"c2825f38-53bd-4385-80fb-aabc8db9e75f":{"id":"c2825f38-53bd-4385-80fb-aabc8db9e75f","parent":null,"name":"PolicieswithDemoAccount","type":"DIRECTORY","isDirectory":true,"children":["56b0252d-1a07-4981-b11e-b3d81c35516e"],"isRemovable":false,"filePath":"PolicieswithDemoAccount"},"56b0252d-1a07-4981-b11e-b3d81c35516e":{"id":"56b0252d-1a07-4981-b11e-b3d81c35516e","parent":"c2825f38-53bd-4385-80fb-aabc8db9e75f","name":"lambda.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"PolicieswithDemoAccount/lambda.js","code":"let AWS = require('aws-sdk');\nconst kinesis = new AWS.Kinesis();\nlet SL_AWS = require('slappforge-sdk-aws');\nlet connectionManager = require('./ConnectionManager');\nconst sns = new AWS.SNS();\nconst s3 = new AWS.S3();\nconst ddb = new AWS.DynamoDB.DocumentClient();\n\n\nexports.handler = function (event, context, callback) {\n    let name = event.name\n\n    ddb.put({\n        TableName: 'demoDDB',\n        Item: { 'demoUser': name }\n    }, function (err, data) {\n        if (err) {\n            //handle error\n        } else {\n            //your logic goes here\n        }\n    });\n    s3.listObjects({\n        'Bucket': 'demouser.bucket',\n        'MaxKeys': 10,\n        'Prefix': ''\n    }).promise()\n        .then(data => {\n            console.log(data);           // successful response\n        })\n        .catch(err => {\n            console.log(err, err.stack); // an error occurred\n        });\n    sns.publish({\n        Message: 'DemoUser',\n        MessageAttributes: {\n            'AWS.SNS.SMS.SMSType': {\n                DataType: 'String',\n                StringValue: 'Promotional'\n            },\n            'AWS.SNS.SMS.SenderID': {\n                DataType: 'String',\n                StringValue: 'Andun'\n            },\n        },\n        PhoneNumber: '+94770630943'\n    }).promise()\n        .then(data => {\n            console.log(\"Success\");\n        })\n        .catch(err => {\n            console.log(err);\n        });\n\n    kinesis.describeStream({\n        StreamName: 'demo-user-stream'\n    }).promise()\n        .then(data => {\n            // your logic goes here\n            console.log(data)\n        })\n        .catch(err => {\n            // error handling goes here\n            console.log(err)\n        });\n\n\n\n\n    callback(null, 'Successfully executed');\n}","triggers":[{"resourceName":"apigusEast1demoAPItestany","config":{}}],"config":{"memory":128,"timeout":60,"runtime":"nodejs8.10"},"customSecurityPolicy":{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Resource":["*"],"Action":["execute-api:*","cloudformation:*","cloudtrail:*","cloudwatch:*","events:*","dynamodb:*","kinesis:*","lambda:*","rds:*","s3:*","sns:*","sqs:*","iam:*","codebuild:*","logs:*","apigateway:*","health:*","ec2:DescribeVpcs","ec2:DescribeSecurityGroups","ec2:DescribeSubnets","ecr:DescribeRepositories","ecr:ListImages","sts:AssumeRole","ssm:PutParameter","kms:*"]}]},"testCases":{"9305d99b-05cf-4349-86b1-3624649280b9":{"id":"9305d99b-05cf-4349-86b1-3624649280b9","name":"Unnamed event","functionId":"56b0252d-1a07-4981-b11e-b3d81c35516e","event":"{\n    \"name\":\"Andun\"\n}"}}}},"rootNode":"c2825f38-53bd-4385-80fb-aabc8db9e75f","openFiles":["56b0252d-1a07-4981-b11e-b3d81c35516e"],"currentFileId":"56b0252d-1a07-4981-b11e-b3d81c35516e","resources":{"apigusEast1demoAPItestany":{"name":"apigusEast1demoAPItestany","type":"API_GATEWAY","config":{"selectedRegion":"us-east-1","apiMode":0,"apiName":"demoAPI","endpointType":"EDGE","resourceMode":0,"resourceName":"test","resourcePath":"/test","restMethod":"ANY","proxyIntegration":false,"enableCORS":false,"stageMode":0,"stageName":"Prod"},"globallyEditable":true},"ddbdemoDDB":{"name":"ddbdemoDDB","type":"DynamoDB","config":{"mode":0,"operation":"put","table":{"arn":"","name":"demoDDB","partitionKey":"ID","partitionKeyType":"S","hasSortKey":false,"sortKey":"","sortKeyType":"S","mode":0},"parameters":{"Key":{},"Item":{"demoUser":"@{name}"},"ExpressionAttributeValues":{}},"validator":{"validatableFields":{},"validity":true},"valid":true},"globallyEditable":false},"s3demouserbucket":{"name":"s3demouserbucket","type":"S3","config":{"mode":0,"bucket":{"region":"us-east-1","name":"demouser.bucket"}},"globallyEditable":false},"snsDirectSMSResource":{"name":"snsDirectSMSResource","type":"SNS","config":{"snsType":1,"numbers":["+94770630943"]},"globallyEditable":false},"cwedemoUserTest":{"name":"cwedemoUserTest","type":"CLOUD_WATCH","config":{"mode":0,"name":"demoUserTest","description":"","scheduleExpression":"rate(2 minutes)"},"globallyEditable":true},"rds-demoUser":{"name":"rds-demoUser","type":"RDS","config":{"editMode":false,"operation":0,"rdsInstance":{"rdsEngineType":"mysql","rdsEdition":"","rdsInstanceSpec":{"dbInstanceClass":"db.t2.micro","dbLicenseModel":"general-public-license","dbEngineVersion":"5.7.19","undefined":""},"rdsSetting":{"instanceIdentifier":"demoUser","masterUsername":"demoUser","masterPassword":"12345678"},"rdsDBOptions":{"dbName":"demoUser","dbPort":"3306"},"rdsInstanceArn":"","Host":"","doesExist":false,"initializationQuery":"CREATE TABLE Persons (\n    PersonID int,\n    LastName varchar(255),\n    FirstName varchar(255),\n    Address varchar(255),\n    City varchar(255) \n);","alreadyDeployed":false},"rdsInstanceResources":[],"projectRegion":"us-east-1","mode":0,"additionalFiles":[],"params":{"query":"INSERT INTO Persons(PersonID,LastName)VALUES(?,?)","inserts":"0,\"Andun\""},"isGlobalEditMode":false,"enableInject":true,"isNewFromGlobal":false},"globallyEditable":true},"kinesisdemoUserStream":{"name":"kinesisdemoUserStream","type":"Kinesis","config":{"mode":0,"StreamName":"demo-user-stream","shards":1,"region":"us-east-1","operation":"describe-stream"},"globallyEditable":true}},"envVariables":[{"lambdaId":"all","varKey":"SIGMA_AWS_ACC_ID","varValue":null,"shouldPersist":false,"editable":false}],"packageJSON":{"dependencies":{"aws-sdk":{"name":"aws-sdk","version":"2.176.0","notRemovable":true},"slappforge-sdk-aws":{"name":"slappforge-sdk-aws","version":"0.0.5","notRemovable":false}}},"lambdaId":"56b0252d-1a07-4981-b11e-b3d81c35516e","additionalFiles":[]},"PROJECT_META":{"projectName":"PolicieswithDemoAccount","projectDescription":"","projectVersion":"1.0.0","projectRegion":"us-east-1","repoName":"test","repoUrl":"","lastSave":1529907901865},"VCS_STATE":{"provider":"GITHUB","repo":{"name":"PolicieswithDemoAccount","url":"https://github.com/TestAndunR/PolicieswithDemoAccount"}}}